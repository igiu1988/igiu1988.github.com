<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Xcode | 胖子汪洋的博客]]></title>
  <link href="http://igiu1988.github.io/blog/categories/xcode/atom.xml" rel="self"/>
  <link href="http://igiu1988.github.io/"/>
  <updated>2013-09-23T14:05:53+08:00</updated>
  <id>http://igiu1988.github.io/</id>
  <author>
    <name><![CDATA[汪洋]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Xcode 高级调试]]></title>
    <link href="http://igiu1988.github.io/blog/2013/08/05/power-your-debug-in-xcode/"/>
    <updated>2013-08-05T10:29:00+08:00</updated>
    <id>http://igiu1988.github.io/blog/2013/08/05/power-your-debug-in-xcode</id>
    <content type="html"><![CDATA[<p>在 Xcode 里 debug 时你会不会有这种想法：在一个 for 循环里，我只需要在 i==102时才开始 debug；或者一个比较实际的例子，我想在 tableView:cellForRowAtIndexPath:当 indexPath 是[15, 0]才开始 debug。
我肯定有那么一部分人会和我一样在那个地方写一个类似这样的代码，在 nslog 处打个断点。</p>

<p>```objective-c</p>

<pre><code>if (i == 102)
{
    NSLog(@"a");
}
</code></pre>

<p>```</p>

<p>看完这篇文章你就不需要这么做了，你会知道更多高级的技巧。<strong><font color='red' size='5'>Power your debug in xcode!!!</font></strong></p>

<p>该文包括</p>

<ul>
<li>让断点在合适的时候停下</li>
<li>断点条件语法注意</li>
<li>在断点条件发生时执行特别的任务</li>
<li>在调试时改变变量的值</li>
</ul>


<!--more-->


<h2>让断点在合适的时候停下</h2>

<p>在断点箭头上右键，Edit Breakpoint，在 Conditions 里添加断点条件。解释图1.</p>

<p>下面这段代码取自一个 for 循环，<code>for (int i = 0; i &lt; _channels.count; i++)</code> , 我想在 i == _channels.count &ndash; 2 时开始进行断点调试。如图添加断点条件，然后运行一下，你就会发现奇迹了。</p>

<p style="text-align:center;"><img src="http://h.hiphotos.bdimg.com/album/s%3D550%3Bq%3D90%3Bc%3Dxiangce%2C100%2C100/sign=f3d78ed918d8bc3ec20806cfb2b0d723/810a19d8bc3eb135acac8c58a71ea8d3fc1f44ed.jpg?referer=e248dcc80ff41bd58344dcc4a4a3&amp;x=.jpg" alt="断点条件" /></p>

<p style="text-align:center;">图1</p>

<h2>断点条件语法注意</h2>

<p>```</p>

<pre><code>i &gt;= (int)[_channels count] - 2
</code></pre>

<p>```
我猜想，这个功能是 xcode 基于调试器（GDB或者LLDB）的高级封装，所以一些调试语句的语法仍要使用调试器能够支持的语法。
<strong>比如图1中的测试条件，如果写成_channels.count，那么调试器会报错。所以我们就注意些，本来可以使用 dot 语法的都改为使用相应的 get 语法。</strong></p>

<p>```</p>

<pre><code>Error parsing breakpoint condition.  Will try again when we hit the breakpoint.Error parsing breakpoint condition.  Will try again when we hit the breakpoint.(gdb) 
</code></pre>

<p>```</p>

<p><strong>可以加上数据类型说明的就加上，比如(int)。</strong></p>

<h2>在断点条件发生时执行特别的任务</h2>

<p>可能你也发现了，在图1的断点条件编辑框里有一个 Actions 功能，对！就是这儿，你可以通过添加一个 Debugger Command 加上你想要的调试语句，比如 p i</p>

<h2>在调试时改变变量的值</h2>

<p>可以在 Actions 里添加Debugger Command，比如执行一个 set var m=10。</p>

<hr />

<h3>参考</h3>

<ul>
<li><a href="http://www.cimgf.com/2012/12/13/xcode-lldb-tutorial/">XCODE LLDB TUTORIAL</a></li>
<li><a href="http://www.delorie.com/gnu/docs/gdb/gdb_118.html">Debugging with GDB &ndash; Assignment to variables</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
